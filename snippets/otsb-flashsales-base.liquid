{%- liquid
  assign screen_lg = 1024
  assign screen_md = 768
  assign imageUrlMobile = section.settings.image
  if section.settings.image_mobile != blank
    assign imageUrlMobile = section.settings.image_mobile
  endif
  
-%}
{% style %}
  .otsb__root .content-flashsale-horizontal, .content-flashsale-vertical {
    display: flex;
    flex-direction: column;
  }
  .otsb__root#shopify-section-{{ section.id }} .flash-sale-text {
    text-align: {{ section.settings.content_alignment_mobile }};
  }
  .otsb__root .content-flashsale-horizontal .flash-sale-text {
    display: flex;
    row-gap: 0.725rem;
    justify-content: center;
  }
  .otsb__root .otsb-timer-ele {
    font-weight: var(--font-heading-weight)
  }
  .otsb__root#shopify-section-{{ section.id }} .otsb-image-treatment-overlay {
    --image-treatment-overlay: 0, 0, 0, 1;
    {% if section.settings.image_overlay_color.alpha != 0 %}
      --image-treatment-overlay: {{ section.settings.image_overlay_color.red }}, {{ section.settings.image_overlay_color.green }}, {{ section.settings.image_overlay_color.blue }}, 1;
    {% endif %}
    opacity: {{ section.settings.image_overlay_opacity | divided_by: 100.0 }};
  }
  @media (min-width: {{ screen_lg }}px) {
    .otsb__root#shopify-section-{{ section.id }} .otsb-rte a {
      {% if section.settings.text_link_color.alpha != 0 %}
        --colors-text-link: {{ section.settings.text_link_color.red }}, {{ section.settings.text_link_color.green }}, {{ section.settings.text_link_color.blue }};
      {% else %}
        --colors-text-link: var(--color-link);
      {% endif %}
    }
    .otsb__root#shopify-section-{{ section.id }} .flash-sale-text {
      text-align: {{ section.settings.content_alignment }};
    }
    .otsb__root .content-flashsale-horizontal {
      flex-direction: row;
      align-items: center;
      justify-content: space-between;
    }
    .otsb__root .content-flashsale-horizontal .flash-sale-text {
      max-width: 60%;
      column-gap: 1.75rem;
      flex-wrap: nowrap;
      align-items: flex-start;
    }
  }
  .otsb__root .bg-{{ section.id }} {
    {% if section.settings.background_color.alpha != 0.0 %}
      --background-color: {{ section.settings.background_color.red }}, {{ section.settings.background_color.green }}, {{ section.settings.background_color.blue }};
    {% endif %}
    {% if section.settings.line_border_color.alpha != 0.0 %}
      --colors-line-and-border: {{ section.settings.line_border_color.red }},{{ section.settings.line_border_color.green }},{{ section.settings.line_border_color.blue }};
    {% endif %}
    padding-top: {{ section.settings.padding_top_mobile }}px;
    padding-bottom: {{ section.settings.padding_bottom_mobile }}px;
    @media (min-width: {{ screen_md }}px) {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
  .otsb__root .content-{{ section.id }} .otsb-heading {
    color: rgb(var(--colors-heading));
  }
  .otsb__root .content-{{ section.id }} {
    {% if section.settings.heading_color.alpha != 0.0 %}
      --colors-heading: {{ section.settings.heading_color.red }},{{ section.settings.heading_color.green }},{{ section.settings.heading_color.blue }};
    {% endif %}
    {% if section.settings.text_color.alpha != 0.0 %}
      --colors-text: {{ section.settings.text_color.red }},{{ section.settings.text_color.green }},{{ section.settings.text_color.blue }};
    {% endif %}
  }
  .otsb__root .gap-{{ section.id }} {
    row-gap: {{ section.settings.spacing_row_mobile }}px;
  }
  {%- if imageUrlMobile != blank -%} 
    .otsb__root .image-{{ section.id }} {
      object-position: {{ imageUrlMobile.presentation.focal_point }}
    }
  {%- endif -%}
  @media (min-width: {{ screen_md }}px) {
    .otsb__root .gap-{{ section.id }} {
      column-gap: {{ section.settings.spacing_col }}px;
      row-gap: {{ section.settings.spacing_row }}px;
    }
    {%- if section.settings.image != blank -%} 
      .otsb__root .image-{{ section.id }} {
        object-position: {{ section.settings.image.presentation.focal_point }}
      }
    {%- endif -%}
  }
  @media (max-width: {{ screen_md | minus: 1 }}px) {
    .page-width.otsb-full-width-mobile {
      padding-left: 0;
      padding-right: 0;
    }
  }
{% endstyle %}
{% if request.design_mode %}
  <style>
    .otsb_nope {
      display: none !important;
      height: 0 !important;
      overflow: hidden !important;
      visibility: hidden !important;
      width: 0 !important;
      opacity: 0 !important;
    }
    ._otsb_warning {
      position: relative;
      box-shadow: 0rem 0.1875rem 0.0625rem -0.0625rem rgba(26, 26, 26, 0.07);
      border-radius: 1rem;
    }
    ._otsb_warning::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: 0;
      box-shadow: 0.0625rem 0rem 0rem 0rem rgba(0, 0, 0, 0.13) inset, -0.0625rem 0rem 0rem 0rem rgba(0, 0, 0, 0.13) inset, 0rem -0.0625rem 0rem 0rem rgba(0, 0, 0, 0.17) inset, 0rem 0.0625rem 0rem 0rem rgba(204, 204, 204, 0.5) inset;
      border-radius: 1rem;
      pointer-events: none;
      mix-blend-mode: luminosity;
    }
    .otsb_warning_root {
      margin-top:36px;
      margin-bottom:36px;
    }
    .otsb_warning_root ._otsb_warning_1 {border-top-left-radius:1rem;border-top-right-radius:1rem;border:1px solid #fcaf0a;background:#fcb827;padding:1rem}
    .otsb_warning_root ._otsb_warning_2 {align-items:center;gap:8px;display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:space-between}
    .otsb_warning_root ._otsb_warning_3 {display:flex;gap:4px;flex-direction:row;flex-wrap:nowrap;justify-content:space-between}
    .otsb_warning_root ._otsb_warning ._otsb_warning__icon {display:block;height:20px;width:20px;max-height:100%;max-width:100%;margin:auto}
    .otsb_warning_root h2 {overflow-wrap:anywhere;word-break:normal;font-size:100%;font-weight:650;line-height:1.25;color:rgb(37,26,0)}
    .otsb_warning_root * {
      margin: 0;
      padding: 0;
      font-family: var(--font-body-family);
      line-height: 1.375;
    }
    .otsb_warning_root ul {
      list-style-type: disc;
    }
    .otsb_warning_root a {
      color: rgb(0, 0, 238);
      text-decoration: underline;
    }
    .otsb_warning_root .otsb_warning_message_container {
      display: flex;
      flex-direction: column;
      gap: 1rem;
      padding:1rem;
      color:rgb(37,26,0);
    }
    .otsb_warning_root .otsb_warning_message_container ul {
      padding-inline-start:3rem;
    }
  </style>
  <div x-data="otsb_script_require" class="page-width otsb_warning_root">
    <div class="_otsb_warning">
      <div class="_otsb_warning_1">
        <div class="_otsb_warning_2">
          <div class="_otsb_warning_3">
            <span class="_otsb_warning__icon">
              <svg viewBox="0 0 20 20" class="Polaris-Icon__Svg" focusable="false" aria-hidden="true"><path d="M10 6.75a.75.75 0 0 1 .75.75v3.5a.75.75 0 1 1-1.5 0v-3.5a.75.75 0 0 1 .75-.75Z"></path><path d="M11 13.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"></path><path fill-rule="evenodd" d="M10 3.5c-1.045 0-1.784.702-2.152 1.447a449.26 449.26 0 0 1-2.005 3.847l-.028.052a403.426 403.426 0 0 0-2.008 3.856c-.372.752-.478 1.75.093 2.614.57.863 1.542 1.184 2.464 1.184h7.272c.922 0 1.895-.32 2.464-1.184.57-.864.465-1.862.093-2.614-.21-.424-1.113-2.147-2.004-3.847l-.032-.061a429.497 429.497 0 0 1-2.005-3.847c-.368-.745-1.107-1.447-2.152-1.447Zm-.808 2.112c.404-.816 1.212-.816 1.616 0 .202.409 1.112 2.145 2.022 3.88a418.904 418.904 0 0 1 2.018 3.875c.404.817 0 1.633-1.212 1.633h-7.272c-1.212 0-1.617-.816-1.212-1.633.202-.408 1.113-2.147 2.023-3.883a421.932 421.932 0 0 0 2.017-3.872Z"></path></svg>
            </span>
            <h2>App Embeds Are Disabled</h2>
          </div>
        </div>
      </div>
      <div class="otsb_warning_message_container">
        <p>To use this section, the app embeds of OT: Theme Sections must be enabled in the theme editor. Please follow these steps to activate them:</p>
        <ul>
          <li>In the left panel, click the last icon that says <b>“App embeds”</b>.</li>
          <li>Enter <b>“OT”</b> on the search bar to quickly find and embed the apps from OT: Theme Sections.</li>
          <li>Turn on the Toggle buttons of "Section Builder Script" and "Section Builder Style", then click <b>Save</b>.</li>
        </ul>
        <p>Please refer to the User Guide <a href="https://support.omnithemes.com/blogs/ot-theme-sections-get-started/1-embed-app-to-shopify-theme" target="_blank">here</a></p>
        <p>For further support: feel free to contact us at <a href="mailto:support@omnithemes.com">support@omnithemes.com</a>!</p>
      </div>
    </div>
  </div>
{% endif %}
<div class="otsb_nope bg-{{ section.id }}" x-data="otsb_script_1">
  <div class="promotion w-full flex relative overflow-hidden
    {% comment %} {%- if section.settings.rounded_corner_image %} md:rounded-lg{% endif %}{% if section.settings.rounded_corner_image_mobile %} rounded-lg{% endif -%} {% endcomment %}
    {%- if section.settings.full_width %}{% if section.settings.padding_full_width %} md:pl-5 md:pr-5 md:bg-none{% else %} md:pl-0 md:pr-0 {% endif %}{% else %} md:bg-none page-width{% endif -%}
    {%- if section.settings.full_width_mobile %} otsb-full-width-mobile{% else %} page-width{% endif -%}"
  >
    {% liquid
      assign otsb_main_content_rounded_classes = ''
      if imageUrlMobile == blank
        if rounded_corner_image == true
          assign otsb_main_content_rounded_classes = 'rounded-lg'
        endif
      elsif section.settings.rounded_corner_image_mobile
        assign otsb_main_content_rounded_classes = 'rounded-lg'
      endif

      if section.settings.rounded_corner_image and section.settings.image != blank
        unless otsb_main_content_rounded_classes contains 'rounded-lg'
          assign otsb_main_content_rounded_classes = 'md:rounded-lg'
        endunless
      else
        if section.settings.image == blank and section.settings.edges_type == 'rounded_corners'
          unless otsb_main_content_rounded_classes contains 'rounded-lg'
            assign otsb_main_content_rounded_classes = 'md:rounded-lg'
          endunless
        else
          assign otsb_main_content_rounded_classes = 'md:rounded-none'
        endif
      endif
    %}
    <div class="w-full h-full relative overflow-hidden {% if section.settings.image == blank %} md:bg-[rgba(var(--background-color),1)] {% endif %}
      {%- unless imageUrlMobile %} bg-[rgba(var(--background-color))]{% endunless -%}
      {%- if section.settings.border_section == "dotted" %} border border-dashed{% endif -%}
      {% if section.settings.rounded_corner_image == true %} md:rounded-lg {% else %} md:rounded-none {% endif %}
      {% if section.settings.rounded_corner_image_mobile == true %} rounded-lg {% endif %}"
    >
      <div class="absolute top-0 left-0 bottom-0 right-0{% if section.settings.image == blank %} md:otsb-hidden{% endif %}{% unless imageUrlMobile %} otsb-hidden{% endunless %}">
        <span class="absolute top-0 left-0 bottom-0 right-0 z-[1] otsb-image-treatment-overlay"></span>
        {%- if section.settings.image != blank -%}
          {% comment %}theme-check-disable ImgLazyLoading{% endcomment %}
          <parallax-image class="{% if section.settings.image_mobile != blank and request.design_mode %} otsb-hidden md:block{% else %} block{% endif %} h-full w-full">
            <parallax-movement x-data="xParallax" x-intersect.once.margin.200px="load({{ section.settings.disable_parallax_effect }})">
              <picture>
                <source
                  srcset="{{ imageUrlMobile | image_url: width: 375 }} 375w,
                    {{ imageUrlMobile | image_url: width: 450 }} 450w,
                    {{ imageUrlMobile | image_url: width: 750 }} 750w,
                    {{ imageUrlMobile | image_url: width: 900 }} 900w,
                    {{ imageUrlMobile | image_url: width: 1100 }} 1100w,
                    {{ imageUrlMobile | image_url: width: 1500 }} 1500w"
                  media="(max-width: 767px)"
                  width="{{ imageUrlMobile.width }}"
                  height="{{ imageUrlMobile.height }}"
                />
                <img
                  srcset="{{ section.settings.image | image_url: width: 750 }} 750w,
                    {{ section.settings.image | image_url: width: 900 }} 900w,
                    {{ section.settings.image | image_url: width: 1100 }} 1100w,
                    {{ section.settings.image | image_url: width: 1500 }} 1500w,
                    {{ section.settings.image | image_url: width: 1780 }} 1780w,
                    {{ section.settings.image | image_url: width: 2000 }} 2000w,
                    {{ section.settings.image | image_url: width: 3000 }} 3000w,
                    {{ section.settings.image | image_url: width: 3840 }} 3840w"
                  {% unless section.settings.show_hero %}
                    loading="lazy"
                  {% else %}
                    loading="eager"
                    fetchpriority="high"
                    decoding="sync"
                  {% endunless %}
                  sizes="100vw"
                  src="{{ section.settings.image | image_url: width: 3840 }}"
                  {% if section.settings.image_mobile != blank %}
                    :alt="(screen.width < {{ screen_md }}) ? '{{ section.settings.image_mobile.alt }}' : '{{ section.settings.image.alt }}'"
                  {% else %}
                    alt="{{ section.settings.image.alt | escape }}"
                  {% endif %}
                  class="object-cover h-full w-full image-{{ section.id }}"
                  width="{{ section.settings.image.width }}"
                  height="{{ section.settings.image.height }}"
                />
              </picture>
            </parallax-movement>
          </parallax-image>
          {% comment %}theme-check-enable ImgLazyLoading{% endcomment %}
        {%- endif %}
        {%- if section.settings.image_mobile != blank and request.design_mode or section.settings.image == blank -%}
          <parallax-image class="block h-full w-full{% if section.settings.image_mobile != blank %} md:otsb-hidden{% endif %}">
            <parallax-movement x-data="xParallax" x-intersect.once.margin.200px="load({{ section.settings.disable_parallax_effect }})">
              {% comment %}theme-check-disable ImgLazyLoading{% endcomment %}
              <img
                srcset="{{ section.settings.image_mobile | image_url: width: 375 }} 375w,
                {{ section.settings.image_mobile | image_url: width: 450 }} 450w,
                {{ section.settings.image_mobile | image_url: width: 750 }} 750w,
                {{ section.settings.image_mobile | image_url: width: 900 }} 900w,
                {{ section.settings.image_mobile | image_url: width: 1100 }} 1100w,
                {{ section.settings.image_mobile | image_url: width: 1500 }} 1500w"
                sizes="100vw"
                src="{{ section.settings.image_mobile | image_url: width: 750 }}"
                alt="{{ section.settings.image_mobile.alt | escape }}"
                class="object-cover h-full w-full{% if section.settings.image_mobile != blank %} md:otsb-hidden{% endif %}"
                {% unless section.settings.show_hero %}
                  loading="lazy"
                {% else %}
                  loading="eager"
                  fetchpriority="high"
                  decoding="sync"
                {% endunless %}
                width="{{ section.settings.image_mobile.width }}"
                height="{{ section.settings.image_mobile.height }}"
                style="object-position: {{ section.settings.image_mobile.presentation.focal_point }}"
              />  
              {% comment %}theme-check-enable ImgLazyLoading{% endcomment %}
            </parallax-movement>
          </parallax-image>
        {%- endif %}
      </div>
      {% liquid
        assign otsb_fs_content_classes = ''
        if section.settings.border_section == 'none'
          if section.settings.image == blank
            if section.settings.background_color.alpha != 0.0
              assign otsb_fs_content_classes = ' md:pl-11 md:pr-11'
            else
              assign otsb_fs_content_classes = ' md:pl-0 md:pr-0'
            endif
          else
            assign otsb_fs_content_classes = 'lg:pl-11 lg:pr-11'
          endif
          if imageUrlMobile == blank
            if section.settings.background_color.alpha != 0.0
              assign otsb_fs_content_classes = otsb_fs_content_classes | append: ' pl-8 pr-8'
            endif
          else 
            assign otsb_fs_content_classes = otsb_fs_content_classes | append: ' pl-8 pr-8'
          endif
        else
          assign otsb_fs_content_classes = ' pl-8 pr-8 lg:pl-11 lg:pr-11'
        endif
      %}
      <div class="otsb-fs_content content-{{ section.id }} content-flashsale-{{ section.settings.content_layout }} gap-{{ section.id }} z-2 relative pt-7 pb-7 lg:pt-10 lg:pb-10 {{ otsb_fs_content_classes }}">
        {%- for block in section.blocks -%}
          {%- case block.type -%}
            {%- when 'image_banner' -%}
              {%- liquid 
                assign heading_size = block.settings.heading_size | times: 120 | times: 0.000225
                assign size_text = block.settings.text_size | times: 160 | times: 0.0001
              -%}
              {%- style -%}
                .otsb__root .heading--{{ block.id }}{
                  font-size: {{ heading_size | times: 0.6 }}rem;
                }
                .otsb__root .content-text-{{ block.id }}, .otsb__root .otsb-timer-ele, .otsb__root .otsb-timer-ele+span {
                  font-size: {{ size_text | times: 0.9375 }}rem;
                }
                
                @media screen and (min-width: {{ screen_md }}px) { 
                  .otsb__root .content-text-{{ block.id }}, .otsb__root .otsb-timer-ele, .otsb__root .otsb-timer-ele+span {
                    font-size: {{ size_text }}rem;
                  }
                  .otsb__root .heading--{{ block.id }}{
                    font-size: {{ heading_size }}rem;
                  }
                }
              {%- endstyle -%} 
              {%- if block.settings.heading != blank or block.settings.text != blank -%}
                <div class="flash-sale-text grow flex-wrap md:flex-col" {{ block.shopify_attributes }}>
                  {%- if block.settings.heading != blank -%}
                    <{{ block.settings.heading_tag }} class="empty:otsb-hidden otsb-heading block leading-tight p-break-words heading--{{ block.id }} w-full">
                      {{ block.settings.heading | escape }}
                    </{{ block.settings.heading_tag }}>
                  {%- endif -%}
                  {%- if block.settings.text != blank -%}
                    {% if block.settings.coupon_code != blank %}
                      {%- capture couponCode -%}
                        {%- style -%}
                          {% if block.settings.text contains 'coupon_code' %}
                            .otsb__root .content-text-{{ block.id }}.otsb-rte p {
                              display: inline;
                            }
                          {% endif %}
                          .otsb__root .border-text-{{ section.id }} {
                            {%- if block.settings.coupon_color.alpha != 0 -%}
                              border-color: {{ block.settings.coupon_color }};
                              color: {{ block.settings.coupon_color }};
                            {% else %}
                              color: var(--colors-button-hover);
                              border-color: var(--colors-button-hover);
                            {%- endif -%}
                          }
                        {%- endstyle -%}
                        <span :title="coppySuccess?'Copied':'Copy code'" x-data='otsb_xCounponCode' x-on:click="copyCode()" class="w-auto button-coupon--{{ block.id }} border-text-{{ section.id }} gap-x-3{% if block.settings.text contains 'coupon_code' %} ml-2.5 mr-2.5{% endif %} lg:pl-4 lg:pr-4 lg:pt-2.5 lg:pb-2.5 cursor-pointer border rounded-full border-dashed overflow-hidden items-center w-fit inline-flex btn--{{ block.id }} none_transition empty:hidden center pl-2 pr-2 pt-1 pb-1 md:pl-3 md:pr-2.5">
                          <span x-ref="code_value" class="leading-none">
                            {{ block.settings.coupon_code | escape }}
                          </span>
                          <span class="flex items-center">
                            <span class="w-4 h-4 inline-block" x-show="!coppySuccess"
                              x-transition:enter="transition-all absolute ease-in-out duration-300"
                              x-transition:enter-start="opacity-0 absolute transform translate-y-full"
                              x-transition:enter-end="opacity-100 absolute transform translate-y-0"
                              x-transition:leave="transition-all absolute ease-in-out duration-300"
                              x-transition:leave-end="opacity-0 transform absolute -translate-y-full">
                            {% render 'otsb-icon-alls', icon: 'icon-copy' %}
                            </span>
                            <span class="w-4 h-4 inline-block" x-show="coppySuccess" x-cloak
                              x-transition:enter="transition-all ease-in-out duration-300"
                              x-transition:enter-start="opacity-0 transform translate-y-full"
                              x-transition:enter-end="opacity-100 transform translate-y-0"
                              x-transition:leave="transition-all ease-in-out duration-300"
                              x-transition:leave-end="opacity-0 transform -translate-y-full">
                              {% render 'otsb-icon-alls', icon: 'icon-check' %}
                            </span>
                          </span>
                        </span>
                      {% endcapture %}
                    {% endif %}
                    {% liquid
                      assign content_text_classes = ''
                      if section.settings.content_alignment_mobile == 'left'
                        assign content_text_classes = 'text-start justify-start'
                      elsif section.settings.content_alignment_mobile == 'center'
                        assign content_text_classes = 'text-center justify-center'
                      else
                        assign content_text_classes = 'text-end justify-end'
                      endif
                      if section.settings.content_alignment == 'left'
                        assign content_text_classes = content_text_classes | append: ' md:text-start md:justify-start'
                      elsif section.settings.content_alignment == 'center'
                        assign content_text_classes = content_text_classes | append: ' md:text-center md:justify-center'
                      else
                        assign content_text_classes = content_text_classes | append: ' md:text-end md:justify-end'
                      endif
                    %}
                    <div class="w-full content-text-{{ block.id }} min-w-[90%] md:min-w-[270px] text-[rgb(var(--colors-text))] gap-y-2 gap-x-2.5 flex flex-col flex-1 flex-wrap break-words otsb-rte leading-tight after:otsb-hidden {{ content_text_classes }}">
                      {%- if block.settings.coupon_code != blank and block.settings.text contains 'coupon_code' -%}
                        {{ block.settings.text | replace: "coupon_code", couponCode }}
                      {%- else -%}
                        <div>{{ block.settings.text }}</div>
                      {%- endif -%}
                    </div>
                    {%- if block.settings.coupon_code != blank -%}
                      <script src="{{ 'otsb-coupon-code.js' | asset_url }}" defer></script>
                    {%- endif -%}
                  {%- endif -%}
                </div>
              {%- endif -%}
            {%- when 'buttons' -%}
              {%- if block.settings.button_label != blank -%}
                <div class="otsb-block-button--{{ block.id }}" {{ block.shopify_attributes }}>
                  {%- style -%}
                    .otsb__root .otsb-block-button--{{ block.id }} {
                      text-align: {{ section.settings.content_alignment_mobile }};
                    }
                    .otsb__root .button--{{ block.id }}, .button--{{ block.id }} *:before {
                      {% if block.settings.button_color_mobile != "hover" %}
                        --color-button-mobile: var(--color-button);
                        --color-button-text-mobile: rgb(var(--color-button-text));
                      {% else %}
                        --color-button-mobile: var(--colors-button-hover);
                        --color-button-text-mobile: rgb(var(--colors-button-text-hover));
                      {% endif %}
                    }
                    .otsb__root .button--{{ block.id }} .otsb-button-text {
                      white-space: nowrap;
                    }
                    .otsb__root .button--{{ block.id }}.otsb-btn__solid,
                    .otsb__root .button--{{ block.id }}.otsb-btn__solid:before { 
                      {%- unless block.settings.color_button.alpha == 0.0 -%}
                        --colors-line-and-border: {{ block.settings.color_button.red }}, {{ block.settings.color_button.green }}, {{ block.settings.color_button.blue }};
                        --color-button: {{ block.settings.color_button.red }}, {{ block.settings.color_button.green }}, {{ block.settings.color_button.blue }};
                      {%- else -%}
                        --colors-line-and-border: var(--color-button);
                      {%- endunless -%}
                      {%- unless block.settings.color_button_hover.alpha == 0.0 -%}
                        --colors-button-hover: {{ block.settings.color_button_hover.red }}, {{ block.settings.color_button_hover.green }}, {{ block.settings.color_button_hover.blue }};
                      {% else %}
                        --colors-button-hover: 56, 56, 56;
                      {%- endunless -%}
                      {%- unless block.settings.color_text_button.alpha == 0.0 -%}
                        --color-button-text: {{ block.settings.color_text_button.red }}, {{ block.settings.color_text_button.green }}, {{ block.settings.color_text_button.blue }};
                      {%- endunless -%}
                      {%- unless block.settings.color_text_button_hover.alpha == 0.0 -%}
                        --colors-button-text-hover: {{ block.settings.color_text_button_hover.red }}, {{ block.settings.color_text_button_hover.green }}, {{ block.settings.color_text_button_hover.blue }};
                      {%- endunless -%}
                    }
                    .otsb__root .button--{{ block.id }}.otsb-button-outline {
                      {%- if block.settings.secondary_button_text.alpha != 0.0 -%} 
                        --colors-secondary-button: {{ block.settings.secondary_button_text.red }}, {{ block.settings.secondary_button_text.green }}, {{ block.settings.secondary_button_text.blue }}; 
                        --colors-line-secondary-button: {{ block.settings.secondary_button_text.red }}, {{ block.settings.secondary_button_text.green }}, {{ block.settings.secondary_button_text.blue }}; 
                        --background-secondary-button: transparent;
                      {% else %}
                        --colors-secondary-button: 0, 0, 0;
                        --colors-line-secondary-button: 0, 0, 0;
                      {% endif %}
                      {%- if block.settings.color_button_secondary.alpha != 0.0 -%} 
                        --background-secondary-button: {{ block.settings.color_button_secondary.red }}, {{ block.settings.color_button_secondary.green }}, {{ block.settings.color_button_secondary.blue }}; 
                        --colors-line-secondary-button: {{ block.settings.color_button_secondary.red }}, {{ block.settings.color_button_secondary.green }}, {{ block.settings.color_button_secondary.blue }}; 
                      {% endif %}
                    }
                    
                    .otsb__root .button--{{ block.id }}.otsb-btn__text-link, .button--{{ block.id }}.otsb-btn__text-link::after, .button--{{ block.id }}.otsb-btn__text-link::before {
                      {% if block.settings.colors_text_link.alpha != 0.0 %}
                        --colors-text-link: {{ block.settings.colors_text_link.red }}, {{ block.settings.colors_text_link.green }}, {{ block.settings.colors_text_link.blue }};
                      {% else %}
                        --colors-text-link: var(--color-link);
                      {% endif %}
                    }

                    @media (min-width: {{ screen_lg }}px) {
                      .otsb__root .otsb-block-button--{{ block.id }} {
                        text-align: {{ section.settings.content_alignment }};
                      }
                    }
                  {%- endstyle -%}
                  {% liquid
                    assign otsb_fs_btn_classes = 'otsb-button otsb-btn button--' | append: block.id | append: ' text-center inline-flex border empty:otsb-hidden pl-6 pr-6 pt-2.5 pb-2.5 md:pt-3 md:pb-3 leading-normal items-center text-center justify-center'
                    if block.settings.show_button_style == 'secondary'
                      assign otsb_fs_btn_classes = otsb_fs_btn_classes | append: ' otsb-button-outline'
                    elsif block.settings.show_button_style == 'text-link'
                      assign otsb_fs_btn_classes = otsb_fs_btn_classes | append: ' otsb-btn__text-link'
                    else
                      assign otsb_fs_btn_classes = otsb_fs_btn_classes | append: ' otsb-btn__solid'
                    endif
                    unless block.settings.button_link
                      assign otsb_fs_btn_classes = otsb_fs_btn_classes | append: ' hover:cursor-not-allowed opacity-70'
                    endunless
                    case block.settings.button_type
                      when 'rounded'
                        assign otsb_fs_btn_classes = otsb_fs_btn_classes | append: ' otsb-btn-rounded'
                      when 'rounded_corners'
                        assign otsb_fs_btn_classes = otsb_fs_btn_classes | append: ' otsb-btn-rounded-corners'
                      when 'mixed'
                        assign otsb_fs_btn_classes = otsb_fs_btn_classes | append: ' otsb-btn-mixed'
                    endcase
                    case block.settings.button_animation
                      when 'slide'
                        assign otsb_fs_btn_classes = otsb_fs_btn_classes | append: ' otsb-btn__slide'
                      when 'fill_up'
                        assign otsb_fs_btn_classes = otsb_fs_btn_classes | append: ' otsb-btn__fill_up'
                      when 'underline'
                        assign otsb_fs_btn_classes = otsb_fs_btn_classes | append: ' otsb-btn__underline'
                      when 'sliced'
                        assign otsb_fs_btn_classes = otsb_fs_btn_classes | append: ' otsb-btn__sliced'
                    endcase
                  %}
                  <a{% if block.settings.button_link %} href="{{ block.settings.button_link }}"{% if block.settings.open_new_window_button %} target="_blank"{% endif %}{% else %} role="link" aria-disabled="true"{% endif %} class="{{ otsb_fs_btn_classes }}">
                    {% render 'otsb-button-label', button_animation: block.settings.button_animation, custom_icon_button:block.settings.custom_icon_button, button_label: block.settings.button_label, show_button_style: block.settings.show_button_style %}
                  </a>
                </div>
              {%- endif -%}
            {%- when 'countdown_timer' -%}
              {%- style -%}
              {% liquid
                assign countdown_timer_text_heading_size = 2.4
                assign cd_timer_text_size = 1.6
              %}
                .otsb__root .timer--{{ block.id }} {
                  --font-heading-weight: 700;
                  /* font-size: calc(var(--font-heading-scale) * {{ countdown_timer_text_heading_size | times: 0.833333333 }}rem); */
                  {% unless block.settings.timer_color_countdown.alpha == 0.0 %}
                    color: {{ block.settings.timer_color_countdown }};
                  {% else %}
                    color: var(--colors-button-hover);
                  {% endunless %}
                }
                /* .otsb__root .timer--{{ block.id }}+span {
                  font-size: calc(var(--font-body-scale) * {{ cd_timer_text_size | times: 0.9375 }}rem);
                } */
                .otsb__root .x-countdown-{{ block.id }} {
                  margin-left: -{{ block.settings.spacing_col_mobile | times: 0.5 }}px;
                  margin-right: -{{ block.settings.spacing_col_mobile | times: 0.5 }}px;
                }
                .otsb__root .countdown--{{ block.id }} {
                  margin-left: {{ block.settings.spacing_col_mobile | times: 0.5 }}px;
                  margin-right: {{ block.settings.spacing_col_mobile | times: 0.5 }}px;
                }
                @media screen and (min-width: {{ screen_md }}px) {
                  /* .otsb__root .timer--{{ block.id }} {
                    font-size: calc(var(--font-heading-scale) * {{ countdown_timer_text_heading_size }}rem);
                  } */
                  /* .otsb__root .timer--{{ block.id }}+span {
                    font-size: calc(var(--font-body-scale) * {{ cd_timer_text_size }}rem);
                  } */
                  .otsb__root .x-countdown-{{ block.id }} {
                    margin-left: -{{ block.settings.spacing_col | times: 0.5 }}px;
                    margin-right: -{{ block.settings.spacing_col | times: 0.5 }}px;
                  }
                  .otsb__root .countdown--{{ block.id }} {
                    margin-left: {{ block.settings.spacing_col | times: 0.5 }}px;
                    margin-right: {{ block.settings.spacing_col | times: 0.5 }}px;
                  }
                }
                .otsb__root .countdown--{{ block.id }} {
                  {% if block.settings.bg_color_countdown.alpha != 0.0 %}
                    background-color: rgba({{ block.settings.bg_color_countdown.red }}, {{ block.settings.bg_color_countdown.green }}, {{ block.settings.bg_color_countdown.blue }}, {{ block.settings.overlay_opacity }}%);
                  {% endif %}
                  {% unless block.settings.text_color_countdown.alpha == 0.0 %}
                    color: {{ block.settings.text_color_countdown }};
                  {% endunless %}
                }
                .otsb__root div.line-{{ block.id }}:empty {
                  display: unset;
                }
                .countdown--{{ block.id }}.otsb-timer-rounded {
                  border-radius: {{ block.settings.corner_radius }}px;
                }
              {%- endstyle -%}
              <div 
                id="x-countdown-banner"
                class="block-promotion-banner mt-1 mb-1{% if block.settings.timer_style == 'rounded' %} lg:grow{% endif %}"
                x-data="{ loading: true, textLoad: '-', days: 0, hours: 0, minutes: 0, seconds: 0 }"
                x-intersect.once.margin.200px='$nextTick(() => {
                  $store.xHelper.countdown({
                    "id": "{{ block.id }}",
                    "timezone": {{ block.settings.timezone | default: 0 }},
                    "end_year": {{ block.settings.end_year | default: 0 }},
                    "end_month": {{ block.settings.end_month | default: 0 }},
                    "end_day": {{ block.settings.end_day | default: 0 }},
                    "end_hour": {{ block.settings.end_hour | default: 0 }},
                    "end_minute": {{ block.settings.end_minute | default: 0 }},
                    "justify": "{{ section.settings.content_alignment }}",
                    "next_timer": {{ block.settings.next_timer | default: 0 }},
                    "loop_next_timer": {{ block.settings.next_timer_loop | default: false }},
                  }, (canShow, s, m, h, d) => {
                    days = d;
                    hours = h;
                    minutes = m;
                    seconds = s;
                    loading = false;
                  })
                })'
                {{ block.shopify_attributes }}
              >
                {% liquid 
                  assign countdown_timer_classes = 'countdown--' | append: block.id | append: ' relative bg-color--' | append: block.id | append: ' w-full min-h-[60px] md:min-h-[80px] max-w-[86px] md:max-w-[112px] lg:min-w-[90px]'

                  if block.settings.border_style == 'border'
                    assign countdown_timer_classes = countdown_timer_classes | append: ' border border-dashed border-color--' | append: block.id
                  endif
                  if block.settings.timer_style == 'rounded_corners'
                    assign countdown_timer_classes = countdown_timer_classes | append: ' otsb-timer-rounded'
                  elsif block.settings.timer_style == 'rounded'
                    assign countdown_timer_classes = countdown_timer_classes | append: ' flex-1 rounded-full before:block before:h-0 before:pb-[100%]'
                  endif
                %}
                <div class="x-countdown-promo-banner x-countdown-{{ block.id }} justify-{{ section.settings.content_alignment_mobile }} lg:justify-{{ section.settings.content_alignment }} flex rtl:flex-row-reverse">
                  {% assign timer_arr = 'days:Days,hours:Hours,minutes:Minutes,seconds:Seconds' | split: ',' %}
                  {% for item in timer_arr %}
                    {% assign parts = item | split: ":" %}
                    {% assign value = parts[0] %}
                    {% assign label = parts[1] %}
                    <div class="{{ countdown_timer_classes }}">
                      <div class="flex flex-col items-center justify-center{% if block.settings.timer_style == 'rounded' %} absolute{% endif %} top-0 left-0 h-full w-full">
                        <span x-html="loading?textLoad:{{value}}" class="timer--{{ block.id }} otsb-timer-ele"></span>
                        <span>{{label}}</span>
                      </div>
                    </div>
                    {% if forloop.first == false and forloop.last == false %}
                      {% if block.settings.border_style == "line_vertical" and block.settings.bg_color_countdown.alpha == 0.0 %}
                        <div class="line-{{ block.id }} relative after:absolute after:right-0 after:top-1/2 after:-translate-y-1/2 after:w-0 after:border-solid after:h-[50%] after:border-l"></div>
                      {% endif %}
                    {% endif %}
                  {% endfor %}
                </div>
              </div>
          {%- endcase -%}
        {%- endfor -%}
      </div>
    </div>
  </div>
</div>
{% unless request.design_mode %}
<script>window.otsb_loadedEmbedChecker=window.otsb_loadedEmbedChecker||null,window.addEventListener("load",(function(){null===window.otsb_loadedEmbedChecker&&(window.otsb_loadedEmbedChecker=d=>{const e=document.querySelector(d);e&&(window?.otsb?.loadedScript&&window?.otsb?.loadedScript.includes("otsb_alpine_main_script_loaded")||e.remove())}),window.otsb_loadedEmbedChecker('#shopify-section-{{ section.id }} [x-data="otsb_script_1"]')}));</script>
{% endunless %}
