{% liquid
  assign enable_rtl = settings.rtl
  assign iso_code = request.locale.iso_code
  assign money_format = shop.money_format
  if settings.currency_code_enabled
    assign money_format = shop.money_with_currency_format | strip_html
  endif
  assign lis_language_rtl = settings.language_rtl
  if lis_language_rtl != blank
    if lis_language_rtl contains iso_code
      assign enable_rtl = true
    else
      assign enable_rtl = false
    endif
  endif
%}

<!doctype html>
<html class="no-js{% if enable_rtl %} body-rtl{% endif %}" lang="{{ iso_code }}">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="theme-color" content="">
    <link rel="canonical" href="{{ canonical_url }}">
    <link
      rel="preconnect"
      href="https://cdn.shopify.com"
      crossorigin
    >
    {%- if settings.favicon != blank -%}
      <link
        rel="icon"
        type="image/png"
        href="{{ settings.favicon | image_url: width: 32, height: 32 }}"
      >
    {%- endif -%}
    <title>
      {{ page_title }}
    </title>
    <meta name="description" content="{{ page_description | default: shop.description | default: shop.name | escape }}">
    {% render 'meta-tags' %}
    {{ content_for_header }}
    <script>
      document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
      if (Shopify.designMode) {
        document.documentElement.classList.add('shopify-design-mode');
      }
      window.shopUrl = '{{ request.origin }}';
      window.routes = {
        cart_add_url: '{{ routes.cart_add_url }}',
        cart_change_url: '{{ routes.cart_change_url }}',
        cart_update_url: '{{ routes.cart_update_url }}',
        cart_url: '{{ routes.cart_url }}',
        search_url: '{{ routes.search_url }}',
        predictive_search_url: '{{ routes.predictive_search_url }}',
      };
      window.variantStrings = {
        addToCart: `{{ 'products.product.add_to_cart' | t }}`,
        soldOut: `{{ 'products.product.sold_out' | t }}`,
        available: `{{ 'products.product.available' | t }}`,
        unavailable: `{{ 'products.product.unavailable' | t }}`,
        preOrder: `{{ 'products.product.pre_order' | t }}`,
        outStock: `{{ 'products.product.outstock' | t }}`,
        inStock: `{{ 'products.product.instock' | t }}`,
        compare: `{{ 'products.product.compare' | t }}`,
        removeCompare: `{{ 'products.product.remove_compare' | t }}`
      }
      window.cartStrings = {
        error: `{{ 'sections.cart.cart_error' | t }}`,
        no_shipping: `{{ 'sections.cart.no_shipping' | t }}`,
        shipping_rate: `{{ 'sections.cart.shipping_rate' | t }}`,
        quantityError: `{{ 'sections.cart.cart_quantity_error_html' | t: quantity: '[quantity]' }}`,
        money_format: {{ money_format | json }},
        quick_edit: `{{ 'sections.cart.quick_edit' | t }}`,
        cart_symbol: '{{ cart.currency.symbol }}'
      }
      window.stringsTemplate = {
        messageRemoveCompare: `{{ 'products.product.remove_compare' | t }}`,
        messageRemoveWishlist: `{{ 'products.product.remove_wishlist' | t }}`
      }

      Shopify.formatMoney = function (cents, format) {
          if (typeof cents == "string") {
            cents = cents.replace(".", "");
          }

          var value = "";
          var placeholderRegex = /\{\{\s*(\w+)\s*\}\}/;
          var formatString = format || (cartStrings && cartStrings.money_format);

          function defaultOption(opt, def) {
            return typeof opt == "undefined" ? def : opt;
          }

          function formatWithDelimiters(number, precision, thousands, decimal) {
            precision = defaultOption(precision, 2);
            thousands = defaultOption(thousands, ",");
            decimal = defaultOption(decimal, ".");

            if (isNaN(number) || number == null) {
              return 0;
            }

            number = (number / 100.0).toFixed(precision);

            var parts = number.split("."),
              dollars = parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1" + thousands),
              cents = parts[1] ? decimal + parts[1] : "";

            return dollars + cents;
          }

          if (!formatString) {
            console.error("Money format is not defined in cartStrings");
            return "";
          }
          const price_format = formatWithDelimiters(cents, 2);
          return price_format;
        };
    </script>
    {%- render 'head-assets' -%}
  </head>
  <body class="{% if template.name == 'collection' %}template-collection{% endif %}{% if template.name == 'product' %}template-product {% endif %}{% if template.name == 'index' %}template-index{% endif %} {%- if settings.general_layout == 'boxed' -%}box-layout{% elsif settings.general_layout == 'full_width' %}full-width-layout{% else %}{%- endif -%} {% if settings.content_center %}item-center{% endif %} product-images-style-{{ settings.product_images_style }} {% if template.suffix contains 'layout-2' %}product-layout-2{% endif %}">
    {%- render 'before-header-start' -%}
    {%- render 'header' -%}

    <div class="tps__overlay d-none-overlay"></div>
    <main
      id="MainContent"
      class="content-for-layout focus-none{% if template == 'product' or template == 'page.wishlist' or template == "page.recently-viewed-products" %} skeleton-product-detail{% endif %}"
      role="main"
      tabindex="-1"
    >
      {{ content_for_layout }}
    </main>
    {% comment %} Product Model {% endcomment %}
    <div
      class="modal fade tp-product-modal"
      id="producQuickViewModal"
      tabindex="-1"
      aria-labelledby="producQuickViewModal"
      aria-hidden="true"
    >
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <div class="tp-product-modal-content d-lg-flex align-items-start">
            <button
              type="button"
              class="tp-product-modal-close-btn"
              data-bs-toggle="modal"
              data-bs-target="#producQuickViewModal"
            >
              <i class="fa-regular fa-xmark"></i>
            </button>
          </div>
        </div>
      </div>
    </div>
    {%- render 'footer-layout' -%}
    {%- section 'mobile-stickybar' -%}
    {%- section 'custom-colors' -%}
    {%- render 'fake-order' -%}
    {%- render 'content-bottom' -%}
    {%- render 'before-you-leave' -%}
    {%- render 'scripts-tag' -%}
    {%- if shop.domain == 'https://shofy-ecommerce.myshopify.com'
      or shop.domain == 'demo-shofy-ecommerce.myshopify.com'
      or shop.domain == 'shofy-demo-v2.myshopify.com'
    -%}
      <feature-button class="d-none extent-button-right-bar"></feature-button>
    {%- endif -%}
  </body>
</html>
